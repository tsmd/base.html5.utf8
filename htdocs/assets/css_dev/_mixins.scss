@charset "UTF-8";

@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin pre-wrap() {
	white-space: pre-wrap;
	word-wrap: break-word;
	word-break: break-all;
}

@mixin white-space($value:normal) {
	@if $value == normal {
		white-space: $value;
		word-wrap: break-word;
		word-break: break-all;
	}
	@else if $value == nowrap {
		white-space: $value;
		word-wrap: normal;  // IE は、word-wrap :break-word が効いてると結局折り返ししてしまうため。
		word-break: normal; // IE は、word-break:break-all  が効いてると結局折り返ししてしまうため。
	}
	@else if $value == pre-wrap {
		@include pre-wrap();
	}
	@else {
		white-space: $value;
	}
}

@mixin tab-focus() {
	outline: thin dotted #333;
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

@mixin center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin text-overflow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin placeholder($color) {
	&::-moz-placeholder {
		color: $color;
	}

	&:-ms-input-placeholder {
		color: $color;
	}

	&::-webkit-input-placeholder {
		color: $color;
	}
}

@mixin transition($transition) {
	-webkit-transition: $transition;
	transition: $transition;
}

@mixin transition-delay($transition-delay) {
	-webkit-transition-delay: $transition-delay;
	transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration) {
	-webkit-transition-duration: $transition-duration;
	transition-duration: $transition-duration;
}

@mixin transition-transform($transition) {
	-webkit-transition: -webkit-transform $transition;
	-moz-transition: -moz-transform $transition;
	transition: transform $transition;
}

@mixin rotate($degrees) {
	-webkit-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	transform: rotate($degrees);
}

@mixin scale($ratio) {
	-webkit-transform: scale($ratio);
	-ms-transform: scale($ratio);
	transform: scale($ratio);
}

@mixin translate($x, $y) {
	-webkit-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	transform: translate($x, $y);
}

@mixin skew($x, $y) {
	-webkit-transform: skew($x, $y);
	-ms-transform: skewX($x) skewY($y);
	transform: skew($x, $y);
}

@mixin translate3d($x, $y, $z) {
	-webkit-transform: translate3d($x, $y, $z);
	transform: translate3d($x, $y, $z);
}

@mixin backface-visibility($visibility){
	-webkit-backface-visibility: $visibility;
	-moz-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

@mixin box-sizing($boxmodel) {
	-moz-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

@mixin user-select($select) {
	-webkit-user-select: $select;
	-moz-user-select: $select;
	-ms-user-select: $select;
	user-select: $select;
}

@mixin resizable($direction) {
	resize: $direction;
	overflow: auto; // Safari fix
}

@mixin opacity($opacity) {
	opacity: $opacity;
	filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
}
